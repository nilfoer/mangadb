- test webgui: ??
    auth system
    import_book
    update_book_ext_info
    apply_upd_changes
    list_action_ajax
    add_ext_info
    add_book + cancel
    edit_book
    upload_cover
- update unchanged vals from db when loading instance?    
- remove copy pasted html/css

--IDEAS/NEW FEATURES-------------------------------------------------------------------------------------------------------
- assoc col with ONETOMANY/MANYTOONE hide _id col and only show row/object
    e.g. for ExternalInfo remove book_id Column and leave book AssociatedColumnOne
    or leave col but make book not be an associated col but relationship property or sth similar like in sqlalchemy    
- webGUI: mb dont immediately load assoc col when importing from row -> webGUI displays a lot of entries and doesnt need the cols
    - assoc col lazy
                -> either leaves assoc col alone if theyre lazy loaded
                -> or loads them if theyre eager loaded
- actual DBRow obj in assoc col
- change title to many to many relationship so a book can have many diff titles e.g. for diff langs or titles with translation and magazine information etc?
- incomplete chapters/volumes on sites other than tsumino (tsumino only uploads a complete chapter or a complete volume with only a few exceptions)
    - col for parent book?
    - 
- books that are not (yet) completely translated:
    way of tracking them and checking for translation?
    or should user handle that himself separately from mdb?

       
--CANCELED-----------------------------------------------------------------------------------------------------------------
- removed staticmehtods that change state in db
	-> changes wont propagate to book that may be in id_map
	-> if we tried to get book from id_map in static methods it would work for normal columns since prior changes would be overwritten (would need to reset commited_state for that col)
		but it wouldnt work for assoc cols since changes wouldnt get overwritten
		unless we used set
- use ids for adding removing from db (+name for displaying)
    or option for both and decide based on param type?        
- mb add parent_id field so a chapter/volume can be attributed to a larger book
    also works rn with collection but might spam the display if there are too many chapters+books in a collection
- mb switch to only ids when adding/removing joined col values from webGUI
    => NO since i need the names, because users are able to add new ones
        but mb switch later to add ALL the values using the names and then add them in bridge table with ids
        but prob not worth it
- change to sets for joined cols -> POSTPONED till it gets too slow
- there shouldnt be duplicate tags in the sense of e.g. "Demong Girl | Succubus" and "Succubus",
    since its impractical for searching
    -> convert site tags to MangaDB tags
    => let user handle this (they can import the tags and then change them if they dont want duplicates etc.)    
- add ext to edit_info?
        -> no want to keep editing book and external links separate
- update func in MangaDB(not just webgui)(select fields to overwrite/update 
    always adding/updating ext_info)
        -> only update ext info, otherwise user content gets deleted
        -> mb mark user content and only update imported tags/artist etc..