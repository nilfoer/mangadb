- change offset queries to use keyset pagination -> store last(displayed)id in webgui, also get one more row than needed to check if we have a next page
    or mb even 2 more rows and grab the ten in the middle to know if prev/next btn needed?

- mb remove title and use t_eng,t_foreign to uniquely identify row besides pk? since title is just other titles combined           
- fix commited state callback still getting Nones when loading from db
- assoc col with ONETOMANY/MANYTOONE hide _id col and only show row/object
    e.g. for ExternalInfo remove book_id Column and leave book AssociatedColumnOne
    or leave col but make book not be an associated col but relationship property or sth similar like in sqlalchemy
- if i reload a book in webgui since i e.g. changed downloaded to 1 in db
        will give me book from id_map
        -> should i just update the values on the book from row?
            only for cols that havent changed?
- fix search: title removed            
                

- thread/subprocess for network stuff
- webGUI: mb dont immediately load assoc col when importing from row -> webGUI displays a lot of entries and doesnt need the cols
    - assoc col lazy
                -> either leaves assoc col alone if theyre lazy loaded
                -> or loads them if theyre eager loaded
- create indices for Tags.name, Category.name etc.? + Books.title?
- check newly added books for dl (on production db)
- tests
- webgui security

       
--CANCELED-----------------------------------------------------------------------------------------------------------------
- mb add parent_id field so a chapter/volume can be attributed to a larger book
    also works rn with collection but might spam the display if there are too many chapters+books in a collection
- mb switch to only ids when adding/removing joined col values from webGUI
    => NO since i need the names, because users are able to add new ones
        but mb switch later to add ALL the values using the names and then add them in bridge table with ids
        but prob not worth it
- change to sets for joined cols -> POSTPONED till it gets too slow
- there shouldnt be duplicate tags in the sense of e.g. "Demong Girl | Succubus" and "Succubus",
    since its impractical for searching
    -> convert site tags to MangaDB tags
    => let user handle this (they can import the tags and then change them if they dont want duplicates etc.)    
- add ext to edit_info?
        -> no want to keep editing book and external links separate
- update func in MangaDB(not just webgui)(select fields to overwrite/update 
    always adding/updating ext_info)
        -> only update ext info, otherwise user content gets deleted
        -> mb mark user content and only update imported tags/artist etc..